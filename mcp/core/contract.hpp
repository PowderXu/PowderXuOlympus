#pragma once
#include "transaction.hpp"
#include "common.hpp"
#include <account/base.hpp>
#include <libdevcore/Address.h>

namespace mcp
{
	const std::string DENContractABI = "[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"stores4\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"intstores\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"addressstores\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stringstores\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"boolstores\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"bytesstores\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"key\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"v1\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"v2\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"v3\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"v4\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"v5\",\"type\":\"bytes\"}],\"name\":\"setreturns\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"key\",\"type\":\"int256\"}],\"name\":\"getreturns\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\",\"constant\":true}]";
	const dev::Address DENContractAddress = dev::Address("0xD2b53c6dcF4EB754DE108ec0420EE7EcfC1223B3");
	const dev::Address DENcallcAddress = dev::Address("0x1144b522f45265c2dfdbaee8e324719e63a1694c");

	class DENContractCaller
	{
	public:
		DENContractCaller(){}
		DENContractCaller(dev::BoundContract _contract) :contract(_contract) {}

		//demo
		// returns int v1, dev::Address v2, std::string v3, bool v4, dev::bytes v5
		template<typename... Args>
		void getreturns(int & v1, dev::h160& v2, std::string& v3, bool& v4, dev::bytes& v5, Args const&... args);
	private:
		dev::BoundContract contract;
	};

	DENContractCaller NewDENContractCaller(dev::ContractCaller const& _caller);

	/// args: abi input
	/// v1,v2,v3,v4,v5 return values
	template<typename... Args>
	inline void DENContractCaller::getreturns(int & v1, dev::h160& v2, std::string& v3, bool& v4, dev::bytes& v5, Args const&... args)
	{
		std::string method = "getreturns";
		dev::CallOpts opts{ DENcallcAddress };
		dev::bytes ret = contract.Call(&opts, method, args...);
		contract.Unpack(method, ret, v1, v2, v3, v4, v5);
	}

	///ContractCaller instance
	extern DENContractCaller DENCaller;

	///mainnet witness contract
	//const dev::bytes MainContractByteCode(dev::fromHex(""));
	const dev::bytes MainContractByteCode(dev::fromHex("6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001600082825461005691906100de565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f97f431a6495b8e2dbe7d02105740e05a2178a4c19e315d7573c8ff0ad590e7a460405160405180910390a2610112565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006100e9826100a5565b91506100f4836100a5565b925082820190508082111561010c5761010b6100af565b5b92915050565b611453806101216000396000f3fe6080604052600436106100705760003560e01c80633ccfd60b1161004e5780633ccfd60b1461010857806388d695b21461011f5780638da5cb5b14610148578063d0e30db01461017357610070565b80631a2d8629146100755780631d01364c146100a05780633c662132146100cb575b600080fd5b34801561008157600080fd5b5061008a61017d565b6040516100979190610980565b60405180910390f35b3480156100ac57600080fd5b506100b56101b0565b6040516100c291906109aa565b60405180910390f35b3480156100d757600080fd5b506100f260048036038101906100ed9190610a11565b6101b6565b6040516100ff9190610b5d565b60405180910390f35b34801561011457600080fd5b5061011d610364565b005b34801561012b57600080fd5b5061014660048036038101906101419190610df3565b6104d0565b005b34801561015457600080fd5b5061015d6107ab565b60405161016a9190610e7a565b60405180910390f35b61017b6107cf565b005b6101856108bb565b604051806060016040528068056bc75e2d631000008152602001600381526020016001815250905090565b60015481565b60606000600367ffffffffffffffff8111156101d5576101d4610b95565b5b60405190808252806020026020018201604052801561020e57816020015b6101fb6108dc565b8152602001906001900390816101f35790505b5090508215610220578091505061035f565b6040518060400160405280736d76b7de9fa746bdfe2d5462ff46778a06bb2c3573ffffffffffffffffffffffffffffffffffffffff16815260200169d3c21bcecceda10000008152508160008151811061027d5761027c610e95565b5b60200260200101819052506040518060400160405280737f4f900abde901c79c1fe91a81ccd876595eceac73ffffffffffffffffffffffffffffffffffffffff1681526020016a01a784379d99db42000000815250816001815181106102e6576102e5610e95565b5b602002602001018190525060405180604001604052807349a1b41e8ccb704f5c069ef89b08cd33f764e9b373ffffffffffffffffffffffffffffffffffffffff1681526020016a027b46536c66c8e30000008152508160028151811061034f5761034e610e95565b5b6020026020010181905250809150505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e990610f47565b60405180910390fd5b6000479050600060018190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161044690610f98565b60006040518083038185875af1925050503d8060008114610483576040519150601f19603f3d011682016040523d82523d6000602084013e610488565b606091505b50509050806104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c390610ff9565b60405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055590610f47565b60405180910390fd5b80518251146105a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105999061108b565b60405180910390fd5b6000805b82518110156105ea578281815181106105c2576105c1610e95565b5b6020026020010151826105d591906110da565b915080806105e29061110e565b9150506105a6565b50806001541015610630576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610627906111c8565b60405180910390fd5b60005b835181101561075557600084828151811061065157610650610e95565b5b6020026020010151905060008483815181106106705761066f610e95565b5b6020026020010151905060008273ffffffffffffffffffffffffffffffffffffffff16826040516106a090610f98565b60006040518083038185875af1925050503d80600081146106dd576040519150601f19603f3d011682016040523d82523d6000602084013e6106e2565b606091505b5050905080610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90611234565b60405180910390fd5b81600160008282546107389190611254565b92505081905550505050808061074d9061110e565b915050610633565b503373ffffffffffffffffffffffffffffffffffffffff167ff26e3fc6e983ab510792e764f171fbb7351e426c5da1c3db87569d2ae7349345848460405161079e9291906113e6565b60405180910390a2505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490610f47565b60405180910390fd5b346001600082825461086f91906110da565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f97f431a6495b8e2dbe7d02105740e05a2178a4c19e315d7573c8ff0ad590e7a460405160405180910390a2565b60405180606001604052806000815260200160008152602001600081525090565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000819050919050565b61091f8161090c565b82525050565b6000819050919050565b61093881610925565b82525050565b6060820160008201516109546000850182610916565b506020820151610967602085018261092f565b50604082015161097a604085018261092f565b50505050565b6000606082019050610995600083018461093e565b92915050565b6109a48161090c565b82525050565b60006020820190506109bf600083018461099b565b92915050565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b6109ee816109d9565b81146109f957600080fd5b50565b600081359050610a0b816109e5565b92915050565b600060208284031215610a2757610a266109cf565b5b6000610a35848285016109fc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9582610a6a565b9050919050565b610aa581610a8a565b82525050565b604082016000820151610ac16000850182610a9c565b506020820151610ad46020850182610916565b50505050565b6000610ae68383610aab565b60408301905092915050565b6000602082019050919050565b6000610b0a82610a3e565b610b148185610a49565b9350610b1f83610a5a565b8060005b83811015610b50578151610b378882610ada565b9750610b4283610af2565b925050600181019050610b23565b5085935050505092915050565b60006020820190508181036000830152610b778184610aff565b905092915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610bcd82610b84565b810181811067ffffffffffffffff82111715610bec57610beb610b95565b5b80604052505050565b6000610bff6109c5565b9050610c0b8282610bc4565b919050565b600067ffffffffffffffff821115610c2b57610c2a610b95565b5b602082029050602081019050919050565b600080fd5b610c4a81610a8a565b8114610c5557600080fd5b50565b600081359050610c6781610c41565b92915050565b6000610c80610c7b84610c10565b610bf5565b90508083825260208201905060208402830185811115610ca357610ca2610c3c565b5b835b81811015610ccc5780610cb88882610c58565b845260208401935050602081019050610ca5565b5050509392505050565b600082601f830112610ceb57610cea610b7f565b5b8135610cfb848260208601610c6d565b91505092915050565b600067ffffffffffffffff821115610d1f57610d1e610b95565b5b602082029050602081019050919050565b610d398161090c565b8114610d4457600080fd5b50565b600081359050610d5681610d30565b92915050565b6000610d6f610d6a84610d04565b610bf5565b90508083825260208201905060208402830185811115610d9257610d91610c3c565b5b835b81811015610dbb5780610da78882610d47565b845260208401935050602081019050610d94565b5050509392505050565b600082601f830112610dda57610dd9610b7f565b5b8135610dea848260208601610d5c565b91505092915050565b60008060408385031215610e0a57610e096109cf565b5b600083013567ffffffffffffffff811115610e2857610e276109d4565b5b610e3485828601610cd6565b925050602083013567ffffffffffffffff811115610e5557610e546109d4565b5b610e6185828601610dc5565b9150509250929050565b610e7481610a8a565b82525050565b6000602082019050610e8f6000830184610e6b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e2e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610f31602283610ec4565b9150610f3c82610ed5565b604082019050919050565b60006020820190508181036000830152610f6081610f24565b9050919050565b600081905092915050565b50565b6000610f82600083610f67565b9150610f8d82610f72565b600082019050919050565b6000610fa382610f75565b9150819050919050565b7f5769746864726177206661696c65642e00000000000000000000000000000000600082015250565b6000610fe3601083610ec4565b9150610fee82610fad565b602082019050919050565b6000602082019050818103600083015261101281610fd6565b9050919050565b7f526563697069656e747320616e6420616d6f756e747320617272617973206d7560008201527f73742068617665207468652073616d65206c656e6774682e0000000000000000602082015250565b6000611075603883610ec4565b915061108082611019565b604082019050919050565b600060208201905081810360008301526110a481611068565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110e58261090c565b91506110f08361090c565b9250828201905080821115611108576111076110ab565b5b92915050565b60006111198261090c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361114b5761114a6110ab565b5b600182019050919050565b7f546865206465706f736974656420616d6f756e74206973206e6f7420656e6f7560008201527f676820746f20636f76657220746865207472616e73666572732e000000000000602082015250565b60006111b2603a83610ec4565b91506111bd82611156565b604082019050919050565b600060208201905081810360008301526111e1816111a5565b9050919050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b600061121e601083610ec4565b9150611229826111e8565b602082019050919050565b6000602082019050818103600083015261124d81611211565b9050919050565b600061125f8261090c565b915061126a8361090c565b9250828203905081811115611282576112816110ab565b5b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006112c08383610a9c565b60208301905092915050565b6000602082019050919050565b60006112e482611288565b6112ee8185611293565b93506112f9836112a4565b8060005b8381101561132a57815161131188826112b4565b975061131c836112cc565b9250506001810190506112fd565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061136f8383610916565b60208301905092915050565b6000602082019050919050565b600061139382611337565b61139d8185611342565b93506113a883611353565b8060005b838110156113d95781516113c08882611363565b97506113cb8361137b565b9250506001810190506113ac565b5085935050505092915050565b6000604082019050818103600083015261140081856112d9565b905081810360208301526114148184611388565b9050939250505056fea26469706673582212202207666a6e0c8696cbc89c7ac58a7af922efa49f3647c74c4a871e1de5440e6864736f6c63430008120033"));
	//const std::string MainContractABI = "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]";
	//const dev::Address MainContractAddress = dev::Address("0xD2b53c6dcF4EB754DE108ec0420EE7EcfC1223B3");
	//const dev::Address MainCallcAddress = dev::Address("0x1144b522f45265c2dfdbaee8e324719e63a1694c");
	//const std::string MainContractABI = "[{\"inputs\":[],\"name\":\"list\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchTransfer.st[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]";
	const std::string MainContractABI = "[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"flag\",\"type\":\"bool\"}],\"name\":\"list\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"a\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchTransfer.st[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\",\"constant\":true},{\"inputs\":[],\"name\":\"getinfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"onmci\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"notonmci\",\"type\":\"int256\"}],\"internalType\":\"struct BatchTransfer.info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\",\"constant\":true},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]";
	const dev::Address MainContractAddress = dev::Address("0xeEe0939EC6A77d83a8Ad91281F5f434f16eE6928");
	const dev::Address MainCallcAddress = dev::Address("0x92415ac021B91045E9bfF73334640c6A0e099069");
	Transaction InitMainContractTransaction();

	class MainContractCaller
	{
	public:
		MainContractCaller() {}
		MainContractCaller(dev::BoundContract _contract) :contract(_contract) {}

		/// write contract
		dev::bytes BatchTransfer(std::map<dev::Address, u256> const& _v);

		///read contract; staking list
		StakingList List();

		///read contract; main info
		MainInfo GetMainInfo();
	private:
		dev::CallOpts DefaultOpts{ MainCallcAddress };
		dev::BoundContract contract;
	};

	MainContractCaller NewMainContractCaller(dev::ContractCaller const& _caller);
	///ContractCaller instance
	extern MainContractCaller MainCaller;
}
